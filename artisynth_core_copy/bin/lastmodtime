#!/usr/bin/env python
# script to return the last modification time for a set of files
import sys, os, datetime

helpString = \
"Usage: lastmodtime [OPTIONS] <file> ...\n"\
"LastModTime prints out the most recent modification time of a file or list\n"\
"of files. By default, time is given as an integer, representing the number\n"\
"of seconds since the beginning of 1970. The representation can be changed\n"\
"using the --format option.\n"\
"\n"\
"Options:\n"\
"\n"\
"  -h, --help           prints this message\n"\
"  -f, --format <fmt>   specifies a format string to format the output\n"\
"                       using Python's strftime() function"

idx = 1
mtime = 0
format = None
#
# parse options:
#
while idx < len(sys.argv) and sys.argv[idx][0] == "-":
    arg = sys.argv[idx]
    if arg == "--help" or arg == "-h":
	print helpString
        sys.exit (0)
    elif arg == "--format" or arg == "-f":
        if idx >= len(sys.argv)-1:
	    print "Missing argument for option "+sys.argv[idx]
	    sys.exit (1)
	idx = idx+1
	format = sys.argv[idx]
    else:
	print "Unknown option "+sys.argv[idx]
        print "Use 'lastmodtime --help' for more details"
	sys.exit (1)
    idx = idx + 1

while idx < len(sys.argv):
    try:
        mt = os.stat(sys.argv[idx]).st_mtime
        if mt > mtime:
            mtime = mt
    except:
        print "Warning: file " + sys.argv[idx] + " not found"
    idx = idx + 1
if mtime != 0:
    if format != None:
        dt = datetime.datetime.fromtimestamp (mtime)
        try:
            print dt.strftime (format)
        except:
            print "Invalid time format"
            sys.exit (1)
    else:
        print "%d" % mtime
else:
    sys.exit (1)


